{
  "clicked": false,
  "_replaced_more": false,
  "archived": false,
  "num_comments": 14,
  "created": 1432410142.0,
  "saved": false,
  "selftext": "Good afternoon!\n\nSmall bit of background: My company manufactures small assemblies with integrated solenoids and pressure transducers. To make sure that the assemblies are properly assembled and that the solenoids & transducers work, we stick them into a test stand which pressurizes cavities within the assembly, activates the solenoids, and checks the readouts on the transducers.\n\nAn example of a test:\n1) Turn on an external solenoid (built into the test stand) to pressurize a cavity from a supply chamber.\n2) Check that the transducer for the cavity reads the external pressure\n3) Shut off the external solenoid; turn on a venting solenoid which vents the supply chamber.\n4) Check that the pressure within the cavity doesn't drop.\n5) If it drops, then display a list of possible causes: (ie: fittings leaking, check valves leaking, transducer seal is leaking, external solenoid is leaking, etc).\n6) If it doesn't drop, vent the chamber then move on to the next test.\n\nThe problem with the current test stand is that we need to build several more of these test stands and the current one is poorly documented (okay, not at all documented), takes a custom board that someone designed 10 years ago (also no documentation), and is basically unmaintainable.\n\nI've decided to look into using PLCs (specifically the Click series because they seem to be economical) to replace the test stand because (hopefully) we can use more standardized components and have everything be better documented.\n\nMy question is - is this not too complicated for PLCs? Everything that I've looked up regarding ladder logic is that it's not really suited for complicated logic with many conditions such as this. Or is the whole point that I use a laptop to handle all of the logic & operator interfacing to do all the actual logic and then just use the PLC to drive the relays and handle the analog inputs?\n\nOr should I just use a microcontroller (I only have experience with consumer-grade microcontrollers like arduino + clones) with some relay boards to handle all of that logic? What are the pros & cons of each?",
  "mod_reports": [],
  "secure_media_embed": {},
  "edited": false,
  "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Good afternoon!</p>\n\n<p>Small bit of background: My company manufactures small assemblies with integrated solenoids and pressure transducers. To make sure that the assemblies are properly assembled and that the solenoids &amp; transducers work, we stick them into a test stand which pressurizes cavities within the assembly, activates the solenoids, and checks the readouts on the transducers.</p>\n\n<p>An example of a test:\n1) Turn on an external solenoid (built into the test stand) to pressurize a cavity from a supply chamber.\n2) Check that the transducer for the cavity reads the external pressure\n3) Shut off the external solenoid; turn on a venting solenoid which vents the supply chamber.\n4) Check that the pressure within the cavity doesn&#39;t drop.\n5) If it drops, then display a list of possible causes: (ie: fittings leaking, check valves leaking, transducer seal is leaking, external solenoid is leaking, etc).\n6) If it doesn&#39;t drop, vent the chamber then move on to the next test.</p>\n\n<p>The problem with the current test stand is that we need to build several more of these test stands and the current one is poorly documented (okay, not at all documented), takes a custom board that someone designed 10 years ago (also no documentation), and is basically unmaintainable.</p>\n\n<p>I&#39;ve decided to look into using PLCs (specifically the Click series because they seem to be economical) to replace the test stand because (hopefully) we can use more standardized components and have everything be better documented.</p>\n\n<p>My question is - is this not too complicated for PLCs? Everything that I&#39;ve looked up regarding ladder logic is that it&#39;s not really suited for complicated logic with many conditions such as this. Or is the whole point that I use a laptop to handle all of the logic &amp; operator interfacing to do all the actual logic and then just use the PLC to drive the relays and handle the analog inputs?</p>\n\n<p>Or should I just use a microcontroller (I only have experience with consumer-grade microcontrollers like arduino + clones) with some relay boards to handle all of that logic? What are the pros &amp; cons of each?</p>\n</div><!-- SC_ON -->",
  "downs": 0,
  "user_reports": [],
  "over_18": false,
  "score": 8,
  "stickied": false,
  "domain": "self.PLC",
  "is_self": true,
  "hidden": false,
  "_orphaned": {},
  "_api_link": "https://api.reddit.com/r/PLC/comments/370h2c/which_route_to_choose_plcs_or_microcontrollers/?ref=search_posts",
  "_comments_by_id": {},
  "visited": false,
  "thumbnail": "self",
  "_has_fetched": true,
  "gilded": 0,
  "hide_score": false,
  "_info_url": "https://api.reddit.com/api/info/",
  "created_utc": 1432406542.0,
  "subreddit_id": "t5_2qy0e",
  "id": "370h2c",
  "_params": {},
  "media_embed": {},
  "name": "t3_370h2c",
  "quarantine": false,
  "permalink": "https://www.reddit.com/r/PLC/comments/370h2c/which_route_to_choose_plcs_or_microcontrollers/?ref=search_posts",
  "ups": 8,
  "url": "https://www.reddit.com/r/PLC/comments/370h2c/which_route_to_choose_plcs_or_microcontrollers/",
  "title": "Which route to choose - PLCs or Microcontrollers?"
}