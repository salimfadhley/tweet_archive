{
  "clicked": false,
  "_replaced_more": false,
  "archived": false,
  "num_comments": 1,
  "created": 1438790674.0,
  "saved": false,
  "selftext": "Good day everyone.\n\nI thought this would be a good place to post this...well post, since I was listening to the Podquisition, episode 30, where Jim and Co cover E3, and there was a discussion regarding backwards compatibility. Whenever that topic is brought up, I feel like, and this will sound wrong, but it is usually opinions of people who are incredibly un-informed, and because Jim is always vocal about this issue, again, I though it would be a good place to post, since maybe he would see it. \n\nOne quick  thing, the reason why this is a throwaway account, is because this is the internet, no offense.\n\nBefore anything though, demanding and asking for backwards compatibility is completely right. Especially in situations like the PS Now, where you have to rent games you already own. Customers are in their right to demand such a thing. However the usual \"well why wont they just make it\" is, by all account, and incredibly stupid thing to say.\n\nI say this not in an insulting way, but it is the equivalent of saying \"I know how to run a country\", while you are drinking with a mate in the kitchen. I understand most people are not aware of software development, and they should not if  they do not work in that field, however, believe me when I say this, there is much much  more under the hood, especially when it comes to reasons why it is not possible,  that really does justify the reason why it is not possible.\n\nNow, a bit of my credentials.\n\nI am not a game developer or a Windows based software developer. What I am is one of the leading software developers in a European Automation Company. We work with creating assembly lines and are usually tasked with programming assembly lines for bridge-component manufacturing lines, car and truck assembly lines, airplane parts, reinforcement structures for houses and other large structures, and so on.\n\nWe develop a lot of hardware, as well as use 3rd Party industrial robot manufacturers and develop our own software.  For the last years I  been in charge of the software side of the project, which ranged from programming handling, welding robots, programming PLC/Microproccessors which act as the hubs for these systems, and all other external components. I have worked with Ladder Logic, Structured Text, C, C+, C++, C# and many other specialized languages that most people do no come by.\n\nI have also worked with a lot of hardware, which we had to develop firmware ourselves, since it was new. We literally had instances where we were given a box, where we only know that \"if you press here a light comes up there\", and told that this needs to assemble a Volvo truck.\n\nSo, I have a lot of  experience dealing with software development on target systems and that gives me a bit of understanding in that field.\n\nNow on to gaming.\n\nA lot of times, when you hear \"we can not make it backwards compatible\" it is actually true.\n\nElectronic hardware is incredibly complex in itself. Everything is composed of 1, 0, which in real life is \"does electricity flow or not\". Now when you develop hardware, you will sit down, and map out how the flow of electricity will work between the different components. Given the time of development, you  will use different principles, since even though most code is the same, the \"idea of how to make it\" evolves over time. \n\nNow, when you map out all that, and you will map it to your needs, in this case a gaming console, you will map out how the CPU, Ram and GPU will interact wit each other, how the flow of information, the 1s and 0s, will happen and how the system will utilize that.\n\nAfter that, you will have a system, which will really resemble something that can be coded in \"BASIC\" or \"ASSEMBLER\" languages even. These languages (keep in mind, it is not exactly the same, but the same idea) are incredibly crude and hard to work with, since, for example, with Assembler based system, you will not program them as you usually think of programming, ie text, but you will literally route electricity, and if you make an error you can fry the chip.\n\nNow as fun as that is to program, and trust me it is hell on earth, developer/manufacturers will move away from that, since no one will ever code in that way, and create an environment, which is much more friendly. And that environment can be in C++ or sometimes C# , or if  you are in my area, it will be iec 61131-3 standard.\n\nThis will be the general environment, it is still bare bones but it is much more user friendly already. However the main purpose of it, will be the APIs and other libraries - and this is where backwards compatibility comes in.\n\nThe APIs, Reference Libraries or whatever you want to call it, are what links what you as a developer wrote in your happy environment, to the stone-age pain in the ass actual environment, ie electricity.\n\nThis is where all your calls to the CPU, RAM and GPU are made, this is what interfaces everything and makes everything work to put it simply.\n\nNow,  imagine this, most game development studios, will then go out and write their own engine, which uses the already created API layer. this ends up complicating everything even more.\n\nBecause gaming consoles do not get hardware upgrades, they are highly specialized in their tech, like the PS3 Cell CPU. These things are designed for one task, and because they are made with the currently existing  technology, you make what you can at that moment.\n\nAn important note, is that beyond just \"what you see on the screen\" there is a lot of other important aspects that game engines - consoles firmware do, and that is the managements of calls and trash collection. It is what prevents memory leaks and makes sure you can run things as good as you can.\n\nNow, when you release a new consoles, that consoles will have a new architecture, it will have a new electronic layout, it will have a new manner of calling the CPU, RAM, GPU, it will allocate memory and resources differently.\n\nOn top of that you will have a new set of APIs, which works with that specific hardware.\n\nSo what does that mean. \n\nIt means, that just because both systems uses disks, which keep in mind, is nothing more that a storage place, it can be USB for all you care, you still are using a completely different system.\n\nFrom a programmers point of view, you end up with a situation, where you are asked why doesnt this CD player, which only plays .WAV files play .MP3 files, if they are on a disk also?\n\nWhich is silly. In reality, whenever we have to port something from old hardware to new, the question is more \"Why doesnt this Ipod play my Vinyl records?\". You see how silly that is?\n\nNow, if you are a good developer, what you will do, is attempt to  develop your software in the most hardware independent way possible. However, whenever we do that, we end up sacrificing performance a lot of times, since you can not utilize the system to its absolute fullest, since most of the time the trick to push the hardware as far as you can, are hardware specific trick, which will lock you into that hardware.\n\nThat is why you see ports, since that is developers either re-writing code to make it work on a new platform, or at the very least creating a wrapper for that game, so the game still thinks it is on old hardware.\n\nBut in the end of the day, you still have to understand that, just because VHS and BETAMAX are both tapes, they are not the same. same with this situation.\n\nHowever, as I said in the beginning, it is still right to ask for backwards compatibility, however, there is a reason why it is not possible and it is not that simple.\n\nAnd where as you, as customers and critics are in full right to critic new hardware for not being able to run old games, please do not say \"Why dont they just make it run then?\" or \"Well it is on a DVD also!\" since it makes you look like a person who has zero understanding of technology, that you are criticizing.\n\nAn example, the early version of the PS3 were able to run PS2 games. That was because the only normal solution was to mount an actual PS2 chip into the PS3. So technically speaking those early PS3 were also PS2 and the games were not emulated, but ran on its original system for all they cared. It is not that simple.\n\nThe reason why PC gets away with this, is because PC architecture has not changed that drastically over the years compared to consoles. I mean we still have a shit tone 32 bit PC out there on the market.\n\nWhere as consoles are designed for one purpose only and are designed to push their hardware, PC are more general use, and their architecture is much more standardized, and the evolution of which is much more gradual, smaller and different.\n\nTo put it in simpler terms:\n\nIf PCs are a constantly evolving car model, which with each new model becomes either faster, or more efficent, but it still has 4 wheels and drives, then Consoles are 1 version is a plane, the other is a helicopter and the next model is a submarine. Yes they are all technically \"things that move people around\", but they are highly different.\n\nAnd creating something that will work across every platform, work good across every platform, and also somehow account for the potential future architectures is highly highly complicated, if not impossible.\n\n This was my 2 cents.\n\nTake it for what it is worth.",
  "mod_reports": [],
  "secure_media_embed": {},
  "edited": 1438789404.0,
  "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Good day everyone.</p>\n\n<p>I thought this would be a good place to post this...well post, since I was listening to the Podquisition, episode 30, where Jim and Co cover E3, and there was a discussion regarding backwards compatibility. Whenever that topic is brought up, I feel like, and this will sound wrong, but it is usually opinions of people who are incredibly un-informed, and because Jim is always vocal about this issue, again, I though it would be a good place to post, since maybe he would see it. </p>\n\n<p>One quick  thing, the reason why this is a throwaway account, is because this is the internet, no offense.</p>\n\n<p>Before anything though, demanding and asking for backwards compatibility is completely right. Especially in situations like the PS Now, where you have to rent games you already own. Customers are in their right to demand such a thing. However the usual &quot;well why wont they just make it&quot; is, by all account, and incredibly stupid thing to say.</p>\n\n<p>I say this not in an insulting way, but it is the equivalent of saying &quot;I know how to run a country&quot;, while you are drinking with a mate in the kitchen. I understand most people are not aware of software development, and they should not if  they do not work in that field, however, believe me when I say this, there is much much  more under the hood, especially when it comes to reasons why it is not possible,  that really does justify the reason why it is not possible.</p>\n\n<p>Now, a bit of my credentials.</p>\n\n<p>I am not a game developer or a Windows based software developer. What I am is one of the leading software developers in a European Automation Company. We work with creating assembly lines and are usually tasked with programming assembly lines for bridge-component manufacturing lines, car and truck assembly lines, airplane parts, reinforcement structures for houses and other large structures, and so on.</p>\n\n<p>We develop a lot of hardware, as well as use 3rd Party industrial robot manufacturers and develop our own software.  For the last years I  been in charge of the software side of the project, which ranged from programming handling, welding robots, programming PLC/Microproccessors which act as the hubs for these systems, and all other external components. I have worked with Ladder Logic, Structured Text, C, C+, C++, C# and many other specialized languages that most people do no come by.</p>\n\n<p>I have also worked with a lot of hardware, which we had to develop firmware ourselves, since it was new. We literally had instances where we were given a box, where we only know that &quot;if you press here a light comes up there&quot;, and told that this needs to assemble a Volvo truck.</p>\n\n<p>So, I have a lot of  experience dealing with software development on target systems and that gives me a bit of understanding in that field.</p>\n\n<p>Now on to gaming.</p>\n\n<p>A lot of times, when you hear &quot;we can not make it backwards compatible&quot; it is actually true.</p>\n\n<p>Electronic hardware is incredibly complex in itself. Everything is composed of 1, 0, which in real life is &quot;does electricity flow or not&quot;. Now when you develop hardware, you will sit down, and map out how the flow of electricity will work between the different components. Given the time of development, you  will use different principles, since even though most code is the same, the &quot;idea of how to make it&quot; evolves over time. </p>\n\n<p>Now, when you map out all that, and you will map it to your needs, in this case a gaming console, you will map out how the CPU, Ram and GPU will interact wit each other, how the flow of information, the 1s and 0s, will happen and how the system will utilize that.</p>\n\n<p>After that, you will have a system, which will really resemble something that can be coded in &quot;BASIC&quot; or &quot;ASSEMBLER&quot; languages even. These languages (keep in mind, it is not exactly the same, but the same idea) are incredibly crude and hard to work with, since, for example, with Assembler based system, you will not program them as you usually think of programming, ie text, but you will literally route electricity, and if you make an error you can fry the chip.</p>\n\n<p>Now as fun as that is to program, and trust me it is hell on earth, developer/manufacturers will move away from that, since no one will ever code in that way, and create an environment, which is much more friendly. And that environment can be in C++ or sometimes C# , or if  you are in my area, it will be iec 61131-3 standard.</p>\n\n<p>This will be the general environment, it is still bare bones but it is much more user friendly already. However the main purpose of it, will be the APIs and other libraries - and this is where backwards compatibility comes in.</p>\n\n<p>The APIs, Reference Libraries or whatever you want to call it, are what links what you as a developer wrote in your happy environment, to the stone-age pain in the ass actual environment, ie electricity.</p>\n\n<p>This is where all your calls to the CPU, RAM and GPU are made, this is what interfaces everything and makes everything work to put it simply.</p>\n\n<p>Now,  imagine this, most game development studios, will then go out and write their own engine, which uses the already created API layer. this ends up complicating everything even more.</p>\n\n<p>Because gaming consoles do not get hardware upgrades, they are highly specialized in their tech, like the PS3 Cell CPU. These things are designed for one task, and because they are made with the currently existing  technology, you make what you can at that moment.</p>\n\n<p>An important note, is that beyond just &quot;what you see on the screen&quot; there is a lot of other important aspects that game engines - consoles firmware do, and that is the managements of calls and trash collection. It is what prevents memory leaks and makes sure you can run things as good as you can.</p>\n\n<p>Now, when you release a new consoles, that consoles will have a new architecture, it will have a new electronic layout, it will have a new manner of calling the CPU, RAM, GPU, it will allocate memory and resources differently.</p>\n\n<p>On top of that you will have a new set of APIs, which works with that specific hardware.</p>\n\n<p>So what does that mean. </p>\n\n<p>It means, that just because both systems uses disks, which keep in mind, is nothing more that a storage place, it can be USB for all you care, you still are using a completely different system.</p>\n\n<p>From a programmers point of view, you end up with a situation, where you are asked why doesnt this CD player, which only plays .WAV files play .MP3 files, if they are on a disk also?</p>\n\n<p>Which is silly. In reality, whenever we have to port something from old hardware to new, the question is more &quot;Why doesnt this Ipod play my Vinyl records?&quot;. You see how silly that is?</p>\n\n<p>Now, if you are a good developer, what you will do, is attempt to  develop your software in the most hardware independent way possible. However, whenever we do that, we end up sacrificing performance a lot of times, since you can not utilize the system to its absolute fullest, since most of the time the trick to push the hardware as far as you can, are hardware specific trick, which will lock you into that hardware.</p>\n\n<p>That is why you see ports, since that is developers either re-writing code to make it work on a new platform, or at the very least creating a wrapper for that game, so the game still thinks it is on old hardware.</p>\n\n<p>But in the end of the day, you still have to understand that, just because VHS and BETAMAX are both tapes, they are not the same. same with this situation.</p>\n\n<p>However, as I said in the beginning, it is still right to ask for backwards compatibility, however, there is a reason why it is not possible and it is not that simple.</p>\n\n<p>And where as you, as customers and critics are in full right to critic new hardware for not being able to run old games, please do not say &quot;Why dont they just make it run then?&quot; or &quot;Well it is on a DVD also!&quot; since it makes you look like a person who has zero understanding of technology, that you are criticizing.</p>\n\n<p>An example, the early version of the PS3 were able to run PS2 games. That was because the only normal solution was to mount an actual PS2 chip into the PS3. So technically speaking those early PS3 were also PS2 and the games were not emulated, but ran on its original system for all they cared. It is not that simple.</p>\n\n<p>The reason why PC gets away with this, is because PC architecture has not changed that drastically over the years compared to consoles. I mean we still have a shit tone 32 bit PC out there on the market.</p>\n\n<p>Where as consoles are designed for one purpose only and are designed to push their hardware, PC are more general use, and their architecture is much more standardized, and the evolution of which is much more gradual, smaller and different.</p>\n\n<p>To put it in simpler terms:</p>\n\n<p>If PCs are a constantly evolving car model, which with each new model becomes either faster, or more efficent, but it still has 4 wheels and drives, then Consoles are 1 version is a plane, the other is a helicopter and the next model is a submarine. Yes they are all technically &quot;things that move people around&quot;, but they are highly different.</p>\n\n<p>And creating something that will work across every platform, work good across every platform, and also somehow account for the potential future architectures is highly highly complicated, if not impossible.</p>\n\n<p>This was my 2 cents.</p>\n\n<p>Take it for what it is worth.</p>\n</div><!-- SC_ON -->",
  "downs": 0,
  "user_reports": [],
  "link_flair_css_class": "",
  "over_18": false,
  "score": 3,
  "stickied": false,
  "domain": "self.JimSterling",
  "is_self": true,
  "hidden": false,
  "_orphaned": {},
  "_api_link": "https://api.reddit.com/r/JimSterling/comments/3fvsj5/a_bit_of_insight_into_backwards_compatibility_and/?ref=search_posts",
  "link_flair_text": "Other",
  "_comments_by_id": {},
  "visited": false,
  "thumbnail": "self",
  "_has_fetched": true,
  "gilded": 0,
  "hide_score": false,
  "_info_url": "https://api.reddit.com/api/info/",
  "created_utc": 1438787074.0,
  "subreddit_id": "t5_2to10",
  "id": "3fvsj5",
  "_params": {},
  "media_embed": {},
  "name": "t3_3fvsj5",
  "quarantine": false,
  "permalink": "https://www.reddit.com/r/JimSterling/comments/3fvsj5/a_bit_of_insight_into_backwards_compatibility_and/?ref=search_posts",
  "ups": 3,
  "url": "https://www.reddit.com/r/JimSterling/comments/3fvsj5/a_bit_of_insight_into_backwards_compatibility_and/",
  "title": "A bit of insight into backwards compatibility and the issues with them"
}